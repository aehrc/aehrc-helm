#
# These value defaults provide configuration for a single read only server using a
# kubernetes Deployment with a Postgres Database sidecar container and Gatewway API ingress
#

ontoserver:
  ## @param ontoserver.image                            Container image for OntoServer
  image: quay.io/aehrc/ontoserver:ctsa-6
  ## @param ontoserver.imagePullPolicy                  Image pull policy
  imagePullPolicy: Always
  ## @param ontoserver.imagePullSecrets                 Secrets for pulling image
  imagePullSecrets: []
  deployment:
    ## @param ontoserver.deployment.kind                Kind of controller (Deployment or StatefulSet)
    kind: Deployment
    ## @param ontoserver.deployment.type                single|scaled deployment topology
    type: single
    ## @param ontoserver.deployment.isReadOnly          Ontoserver in readâ€‘only mode - keep it true for scaled
    isReadOnly: true
    ## @param ontoserver.deployment.replicas            Number of replicas - min 2 for scaled deployment - can be set to 0
    replicas: 1
    ## @param ontoserver.deployment.deploymentStrategy  K8s update strategy when using Deployment Kind 
    deploymentStrategy: RollingUpdate
    persistence:
      ## @param ontoserver.deployment.persistence.enabledForDeployment      Enable PVC on Deployment
      enabledForDeployment: false
      existingVolume:
        ## @param ontoserver.deployment.persistence.existingVolume.enabled  Bind to existing PV
        enabled: false
        ## @param ontoserver.deployment.persistence.existingVolume.name     Name of existing PV
        name: ""
      storageClass:
        ## @param ontoserver.deployment.persistence.storageClass.name       StorageClass name if not using provided
        name: default
        provided:
          ## @param ontoserver.deployment.persistence.storageClass.provided.enabled   Use provided storageClass
          enabled: true
          ## @param ontoserver.deployment.persistence.storageClass.provided.storageProvisioner CSI driver
          storageProvisioner: disk.csi.azure.com
          ## @param ontoserver.deployment.persistence.storageClass.provided.storageParameters  Sortage parameters
          storageParameters:
            skuName: Premium_LRS
            kind: Managed
    podDisruptionBudget:
      ## @param ontoserver.deployment.podDisruptionBudget.enabled                     Enable PDB for scaled deployments
      enabled: true
      ## @param ontoserver.deployment.podDisruptionBudget.minAvailable                Minimum pods available
      minAvailable: 1
      ## @param ontoserver.deployment.podDisruptionBudget.maxUnavailable              Maximum pods unavailable - If you set this, set minAvaliable will not be used
      maxUnavailable: false
      ## @param ontoserver.deployment.podDisruptionBudget.unhealthyPodEvictionPolicy  Policy when unhealthy
      unhealthyPodEvictionPolicy: false
    db:
      ## @param ontoserver.deployment.db.enabled            Enable Postgres sidecar
      enabled: true
      ## @param ontoserver.deployment.db.postgresVersion    Version of Postgres
      postgresVersion: 12
  ## @param ontoserver.serverName                          Server hostname - must match a hostName at ontoserver.hostNames 
  serverName: localhost
  ## @param ontoserver.hostNames                           Hostnames for ingress/gateway
  hostNames:
    - localhost
  ## @param ontoserver.timeZone                            Server time zone
  timeZone: UTC
  ## @param ontoserver.language                            Locale/language
  language: en_US
  resources:
    ontoserver:
      ## @param ontoserver.resources.ontoserver.requests.cpu      CPU request
      ## @param ontoserver.resources.ontoserver.requests.memory   Memory request
      ## @param ontoserver.resources.ontoserver.requests.storage  Storage request
      ## @param ontoserver.resources.ontoserver.limits.cpu        CPU limit
      ## @param ontoserver.resources.ontoserver.limits.memory     Memory limit
      ## @param ontoserver.resources.ontoserver.initialHeapSize   Java initial heap
      ## @param ontoserver.resources.ontoserver.maxHeapSize       Java max heap
      requests:
        cpu: 2
        memory: 4G
        storage: 10G
      limits:
        cpu: 2
        memory: 4G
      initialHeapSize: 2800m
      maxHeapSize: 2800m
    db:
      ## @param ontoserver.resources.db.requests.cpu       DB CPU request
      ## @param ontoserver.resources.db.requests.memory    DB memory request
      ## @param ontoserver.resources.db.limits.cpu         DB CPU limit
      ## @param ontoserver.resources.db.limits.memory      DB memory limit
      requests:
        cpu: 1
        memory: 1G
      limits:
        cpu: 1
        memory: 1G
  ## @param ontoserver.healthCheckOption                  Health-check flags [ -p | -s | -f ]
  healthCheckOption: -f
  certmanager:
    ## @param ontoserver.certmanager.enabled               Enable cert-manager
    enabled: true
    ## @param ontoserver.certmanager.clusterIssuerName     ClusterIssuer name or prefix for Geteway's Issuer
    clusterIssuerName: letsencrypt
    ## @param ontoserver.certmanager.email                 Notification email for ACME
    email: noreply@example.com
  gateway:
    ## @param ontoserver.gateway.enabled                   Enable Gateway API
    enabled: true
    ## @param ontoserver.gateway.listenerPortSecure        Secure listener port -  Depends on the gateway class - Traefik is 8443
    listenerPortSecure: 443
    ## @param ontoserver.gateway.annotations               Gateway annotations
    annotations: {}
    ## @param ontoserver.gateway.infrastructureAnnotations Infrastructure annotations
    infrastructureAnnotations: {}
    ## @param ontoserver.gateway.className                 GatewayClass name
    className: envoy-gateway-class
    ## @param ontoserver.gateway.requestTimeout            Request timeout duration
    requestTimeout: 120s
    ## @param ontoserver.gateway.tlsEnabled                Enable TLS
    tlsEnabled: true
  ingress:
    ## @param ontoserver.ingress.enabled                   Enable Ingress
    enabled: false
    ## @param ontoserver.ingress.annotations               Ingress annotations
    annotations: {}
    ## @param ontoserver.ingress.className                 IngressClass name
    className: ontoserver-nginx
    ## @param ontoserver.ingress.tlsEnabled                Enable TLS for Ingress
    tlsEnabled: false
  ## @param ontoserver.tolerations                        Pod tolerations
  tolerations: []
  ## @param ontoserver.customization                      The name of a ConfigMap containing custom logo and CSS files to be deployed with the application
  customization: ""
  ## @param ontoserver.config                             Additional Ontoserver config entries - https://ontoserver.csiro.au/docs/6/config-all.html
  config:
    ONTOSERVER_INSECURE: "true"
  ## @param ontoserver.secretConfig                      Secret-backed Ontoserver config entries
  secretConfig: {}

nginx-ingress:
  ## @param nginx-ingress.enabled                        Enable F5 nginx-ingress-controller
  enabled: false
  controller:
    ingressClass:
      create: true
      name: ontoserver-nginx
    ingressClassByName: true
