kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-ontocloak-deployment
  {{- with .Values.ontocloak.deployment.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.ontocloak.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ontocloak
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ontocloak
        {{- with .Values.ontocloak.deployment.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.ontocloak.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if $.Values.ontocloak.deployment.imagePullSecrets  }}
      imagePullSecrets: {{ toJson .Values.ontocloak.deployment.imagePullSecrets }}
      {{- end }}
      {{- if not .Values.ontocloak.migration.skipCheck }}
      initContainers:
        # 1 – DB check
        - name: db-check
          image: postgres:{{ .Values.ontocloak.deployment.db.provided.postgresVersion }}
          command: ["/bin/bash", "-c"]
          env:
            - name: TZ
              value: {{ .Values.ontocloak.timeZone }}
            - name: KC_REALM_NAME
              value: {{ .Values.ontocloak.migration.realmName }}
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_URL_HOST
            {{ if .Values.ontocloak.deployment.db.external }}
              value: {{ .Values.ontocloak.deployment.db.external.hostName }}
            {{ else }}
              value: {{ .Release.Name }}-ontocloak-db-service
            {{ end }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.ontocloak.deployment.db.database }}
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: username
              value:
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: password
          args:
            - |
              if PGPASSWORD="$KC_DB_PASSWORD" psql -h "$KC_DB_HOST" -U "$KC_DB_USERNAME" \
                -d "$KC_DB_DATABASE" -tAc "SELECT 1 FROM $KC_DB_SCHEMA.realm WHERE name='${KC_REALM_NAME}' LIMIT 1;" | grep -q 1; then
                echo "Realm exists – writing flag" && mkdir -p /work && touch /work/skip;
              fi
          volumeMounts:
            - name: workdir
              mountPath: /work
        # 2 – Import if realm doesn't exist in DB
        - name: realm-import
          image: {{ .Values.ontocloak.deployment.image }}
          env:
            - name: TZ
              value: {{ .Values.ontocloak.timeZone }}
            - name: KC_DB_URL_HOST
            {{ if .Values.ontocloak.deployment.db.external.enabled }}
              value: {{ .Values.ontocloak.deployment.db.external.hostName }}
            {{ else }}
              value: {{ .Release.Name }}-ontocloak-db-service
            {{ end }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.ontocloak.deployment.db.database }}
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: username
              value:
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: password
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.ontocloak.admin.user }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-keycloak-password
                  key: password                    
          command: ["/bin/bash", "-c"]
          args:
            - |
              if [ -f /work/skip ]; then echo "Skipping import"; else kc.sh import --file=/opt/keycloak/data/import/realm.json --override; fi
          volumeMounts:
            - name: workdir
              mountPath: /work
            - name: {{ .Release.Name }}-ontocloak-realm-config
              mountPath: /opt/keycloak/data/import
      {{- end }}
      containers:
        - name: {{ .Release.Name }}-ontocloak
          image: {{ required "An ontocloak.image value is required" .Values.ontocloak.deployment.image }}
          imagePullPolicy: Always
          ports:
           - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 40
            periodSeconds: 5
            failureThreshold: 10
          resources:
            requests:
              cpu: {{ .Values.ontocloak.deployment.resources.cpu }}
              memory: {{ .Values.ontocloak.deployment.resources.memory }}
          args:
            - start
            {{- if .Values.ontocloak.migration.enabled }}
            - --import-realm
            {{- end }}
            - --hostname={{ .Values.ontocloak.serverName }}
            - --proxy edge
            - --optimized
          env:
            - name: TZ
              value: {{ .Values.ontocloak.timeZone }}
            - name: KC_DB_URL_HOST
            {{ if .Values.ontocloak.deployment.db.external.enabled }}
              value: {{ .Values.ontocloak.deployment.db.external.hostName }}
            {{ else }}
              value: {{ .Release.Name }}-ontocloak-db-service
            {{ end }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.ontocloak.deployment.db.database }}
            - name: KC_DB_SCHEMA
              value: public
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: username
              value:
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-db-secret
                  key: password
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.ontocloak.admin.user }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ontocloak-keycloak-password
                  key: password
          volumeMounts:
            - name: {{ .Release.Name }}-ontocloak-properties
              mountPath: /opt/keycloak/conf/agreements.properties
              subPath: ontocloak.properties
            {{- if .Values.ontocloak.customisation }}
            - name: {{ .Release.Name }}-ontocloak-admin-customisation
              mountPath: /opt/keycloak/themes/ontocloak/admin/resources/img/ontoserver-logo.png
              subPath:  ontoserver-logo.png
            - name: {{ .Release.Name }}-ontocloak-login-customisation
              mountPath: /opt/keycloak/themes/ontocloak/login
            {{- end}}
      {{- if .Values.ontocloak.highPriority }}
      priorityClassName: high-priority
      {{- end }}
      volumes:
        {{- if not .Values.ontocloak.migration.skipCheck }}
        - name: {{ .Release.Name }}-ontocloak-realm-config
          configMap:
            name: {{ .Release.Name }}-ontocloak-realm-config
        - name: workdir
          emptyDir: {}
        {{- end }}
        - name: {{ .Release.Name }}-ontocloak-properties
          configMap:
            name: {{ .Release.Name }}-ontocloak-properties
      {{- if .Values.ontocloak.deployment.tolerations }}
      tolerations: {{ toJson .Values.ontocloak.deployment.tolerations }}
      {{- end }}
{{ if not .Values.ontocloak.deployment.db.external.enabled }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-ontocloak-db-deployment
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ontocloak-db
  strategy:
    type: {{ .Values.ontocloak.deployment.db.provided.deploymentStrategy }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ontocloak-db
    spec:
      containers:
        - name: {{ .Release.Name }}-ontocloak-db
          image: postgres:{{ .Values.ontocloak.deployment.db.provided.postgresVersion }}
          ports:
            - containerPort: 5432
          env:
            - name: LANG
              value: en_US.UTF-8
            - name: LANGUAGE
              value: en_US:en
            - name: LC_ALL
              value: en_US.UTF-8
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: TZ
              value: {{ .Values.ontocloak.timeZone }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            {{ if .Values.ontocloak.deployment.db.provided.persistence.enabledForDeployment }}
            - name: {{ .Release.Name }}-ontocloak-db-cluster
              mountPath: /var/lib/postgresql/data
            {{ end }}
            - name: {{ .Release.Name }}-ontocloak-db-init
              mountPath: /docker-entrypoint-initdb.d
      {{- if .Values.ontocloak.highPriority }}
      priorityClassName: high-priority
      {{- end }}
      volumes:
        {{ if .Values.ontocloak.deployment.db.provided.persistence.enabledForDeployment }}
        - name: {{ .Release.Name }}-ontocloak-db-cluster
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-db-files
        {{- end }}
        - name: {{ .Release.Name }}-ontocloak-db-init
          configMap:
            name: {{ .Release.Name }}-ontocloak-db-init
      {{- if .Values.ontocloak.deployment.db.provided.tolerations }}
      tolerations: {{ toJson .Values.ontocloak.deployment.db.provided.tolerations }}
      {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-ontocloak-db-init
data:
  init-db.sh: {{ tpl (.Files.Get "configuration/init-db.sh") . | quote }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ontocloak-keycloak-password
data:
  password: {{ .Values.ontocloak.admin.password | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ontocloak-db-secret
data:
  username: {{ .Values.ontocloak.deployment.db.user | b64enc }}
  password: {{ .Values.ontocloak.deployment.db.password | b64enc }}
